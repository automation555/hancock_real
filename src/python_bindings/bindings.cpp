// This file has been generated by Py++.

#include "boost/python.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "/home/sarx/prog/boost.python/pypp/src/hello.hpp"

namespace bp = boost::python;

struct World_wrapper : World, bp::wrapper< World > {

    World_wrapper(World const & arg )
    : World( arg )
      , bp::wrapper< World >(){
        // copy constructor
        
    }

    World_wrapper()
    : World()
      , bp::wrapper< World >(){
        // null constructor
        
    }

    virtual ::std::string f(  ) {
        if( bp::override func_f = this->get_override( "f" ) )
            return func_f(  );
        else
            return this->World::f(  );
    }
    
    
    ::std::string default_f(  ) {
        return World::f( );
    }

};

struct W2_wrapper : W2, bp::wrapper< W2 > {

    W2_wrapper(W2 const & arg )
    : W2( arg )
      , bp::wrapper< W2 >(){
        // copy constructor
        
    }

    W2_wrapper()
    : W2()
      , bp::wrapper< W2 >(){
        // null constructor
        
    }

    virtual ::std::string f(  ) {
        if( bp::override func_f = this->get_override( "f" ) )
            return func_f(  );
        else
            return this->W2::f(  );
    }
    
    
    ::std::string default_f(  ) {
        return W2::f( );
    }

};

BOOST_PYTHON_MODULE(libhello){
    { //::std::vector< std::string >
        typedef bp::class_< std::vector< std::string > > vector_less__std_scope_string__grate__exposer_t;
        vector_less__std_scope_string__grate__exposer_t vector_less__std_scope_string__grate__exposer = vector_less__std_scope_string__grate__exposer_t( "vector_less__std_scope_string__grate_" );
        bp::scope vector_less__std_scope_string__grate__scope( vector_less__std_scope_string__grate__exposer );
        vector_less__std_scope_string__grate__exposer.def( bp::vector_indexing_suite< ::std::vector< std::string >, true >() );
    }

    bp::class_< World_wrapper >( "World" )    
        .def( 
            "f"
            , &::World::f
            , &World_wrapper::default_f )    
        .def( 
            "geti"
            , &::World::geti
            , ( bp::arg("i") ) )    
        .def( 
            "greet"
            , &::World::greet )    
        .def( 
            "greetx"
            , &::World::greetx
            , ( bp::arg("x") ) )    
        .def( 
            "set"
            , &::World::set
            , ( bp::arg("msg") ) )    
        .def_readwrite( "ss", &World::ss );

    bp::class_< W2_wrapper, bp::bases< World > >( "W2" )    
        .def( 
            "f"
            , &::W2::f
            , &W2_wrapper::default_f );
}
